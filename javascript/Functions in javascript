

## üîÑ **Functions in JavaScript**

Functions are the building blocks of reusable logic. They let you encapsulate code and call it whenever needed.

### ‚úÖ Basic Function Syntax
```javascript
function greet(name) {
  console.log("Hello, " + name + "!");
}

greet("Santosh"); // Output: Hello, Santosh!
```

### üß† Why Functions Matter
- Avoid repetition
- Make code modular and readable
- Enable parameterization and return values
- Essential for callbacks, event handling, and async logic

---

## üß± Next Steps After Functions

Once you're comfortable with functions, here's the natural progression:

| Concept              | Why It Matters                                                                 |
|----------------------|--------------------------------------------------------------------------------|
| **Arrays & Objects** | Core data structures for storing and manipulating data                         |
| **DOM Manipulation** | Lets you interact with HTML elements using JavaScript                          |
| **Events**           | Handle user actions like clicks, keypresses, etc.                              |
| **ES6 Features**     | Learn `let`, `const`, arrow functions, template literals, destructuring        |
| **Callbacks & Promises** | Foundation for asynchronous programming (e.g., API calls, timers)          |
| **Async/Await**      | Cleaner way to handle asynchronous code                                        |


********************************************************
some more example for fumctions usage


## üß† 1. **Function with Return Value**
```javascript
function square(num) {
  return num * num;
}

console.log(square(5)); // Output: 25
```

---

## üßÆ 2. **Function to Check Prime Number**
```javascript
function isPrime(n) {
  if (n <= 1) return false;
  for (let i = 2; i <= Math.sqrt(n); i++) {
    if (n % i === 0) return false;
  }
  return true;
}

console.log(isPrime(7)); // Output: true
```

---

## üì¶ 3. **Function to Sum Array Elements**
```javascript
function sumArray(arr) {
  let sum = 0;
  for (let num of arr) {
    sum += num;
  }
  return sum;
}

console.log(sumArray([1, 2, 3, 4])); // Output: 10
```

---

## üîÅ 4. **Arrow Function for Even Check**
```javascript
const isEven = (num) => num % 2 === 0;

console.log(isEven(10)); // Output: true
```

---

## üßë‚Äçüç≥ 5. **Function with Default Parameters**
```javascript
function greet(name = "Guest") {
  console.log("Welcome, " + name + "!");
}

greet();           // Output: Welcome, Guest!
greet("Santosh");  // Output: Welcome, Santosh!
```

---

## üß™ 6. **Function to Reverse a String**
```javascript
function reverseString(str) {
  return str.split("").reverse().join("");
}

console.log(reverseString("hello")); // Output: "olleh"
```

---

## üßπ 7. **Function to Remove Duplicates from Array**
```javascript
function removeDuplicates(arr) {
  return [...new Set(arr)];
}

console.log(removeDuplicates([1, 2, 2, 3, 4, 4])); // Output: [1, 2, 3, 4]
```

---

## üß© 8. **Function to Count Vowels**
```javascript
function countVowels(str) {
  let count = 0;
  for (let char of str.toLowerCase()) {
    if ("aeiou".includes(char)) count++;
  }
  return count;
}

console.log(countVowels("Santosh")); // Output: 2
```
